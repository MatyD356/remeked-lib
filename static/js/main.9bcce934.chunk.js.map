{"version":3,"sources":["firebase.js","store.js","Form/Form.js","Aside/Aside.js","Book/Book.js","Main/Main.js","App/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","createStore","state","action","type","tasks","task","filter","id","map","item","Object","assign","applyMiddleware","thunkMiddleware","connect","dispatch","ref","on","snap","val","watchTaskAddedEvent","props","formik","useFormik","initialValues","name","author","length","status","validationSchema","Yup","min","max","required","matches","onSubmit","values","uuid","set","addTaskToFirebase","className","handleSubmit","htmlFor","errors","touched","getFieldProps","onChange","handleChange","value","defaultChecked","gender","Aside","watchTaskRemovedEvent","watchTaskChangeEvent","onClick","update","remove","Main","this","key","React","Component","once","forEach","data","push","then","getTasks","App","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.9bcce934.chunk.js","sourcesContent":["import firebase from 'firebase'\nimport { v4 as uuid } from 'uuid';\n\nconst config = {\n  apiKey: \"AIzaSyAvFCZfxzMzT_7eJIkjKpyOFdiKP_RKbv0\",\n  authDomain: \"test-e8e2a.firebaseapp.com\",\n  databaseURL: \"https://test-e8e2a.firebaseio.com\",\n  projectId: \"test-e8e2a\",\n  storageBucket: \"test-e8e2a.appspot.com\",\n  messagingSenderId: \"551986845582\",\n  appId: \"1:551986845582:web:89ca97179999d1b13db6df\",\n  measurementId: \"G-P398HFGLMQ\"\n}\n\nfirebase.initializeApp(config);\nconst database = firebase.database();\n\nexport const addTaskToFirebase = (task) => {\n  const id = uuid()\n  database.ref(`/${id}`).set({\n    task: task.name,\n    author: task.author,\n    length: task.length,\n    status: task.status,\n    id\n  })\n}\n\nexport const removeTaskFromFirebase = (id) => {\n  database.ref(`/${id}`).remove()\n}\n\nexport const changeStatusFromFirebase = (id, status) => {\n  database.ref(`/${id}`).update({\n    status: status === \"Yes\" ? \"No\" : \"Yes\"\n  })\n}\n\nexport default database;","import { createStore, applyMiddleware } from 'redux'\nimport database from './firebase'\nimport thunkMiddleware from 'redux-thunk'\n\nconst GET_TASKS = 'get tasks'\nconst ADD_TASK = 'add task'\nconst REMOVE_TASK = 'remove task'\nconst UPDATE_TASK = 'update task'\n\nexport const getTasks = (tasks) => ({ type: GET_TASKS, tasks })\nexport const addTask = (task) => ({ type: ADD_TASK, task })\nexport const removeTask = (task) => ({ type: REMOVE_TASK, task })\nexport const updateTask = (task) => ({ type: UPDATE_TASK, task })\n\nexport function getTasksThunk() {\n  return dispatch => {\n    const tasks = [];\n    database.ref('/').once('value', snap => {\n      snap.forEach(data => {\n        let task = data.val();\n        tasks.push(task)\n      })\n    })\n      .then(() => dispatch(getTasks(tasks)))\n  }\n}\n\nexport function watchTaskAddedEvent(dispatch) {\n  database.ref(`/`).on('child_added', (snap) => {\n    dispatch(addTask(snap.val()));\n  });\n}\n\nexport function watchTaskRemovedEvent(dispatch) {\n  database.ref(`/`).on('child_removed', (snap) => {\n    dispatch(removeTask(snap.val()));\n  });\n}\n\nexport function watchTaskChangeEvent(dispatch) {\n  database.ref(`/`).on('child_changed', (snap) => {\n    dispatch(updateTask(snap.val()));\n  });\n}\n\n\nfunction Reducer(state = [], action) {\n  switch (action.type) {\n    case GET_TASKS:\n      return action.tasks\n    case ADD_TASK:\n      return [...state, action.task]\n    case REMOVE_TASK:\n      return state.filter(task => task.id !== action.task.id)\n    case UPDATE_TASK:\n      return state.map((item) => {\n        if (item.id === action.task.id) {\n          item = Object.assign({}, action.task)\n        }\n        return item\n      })\n    default:\n      return state\n  }\n}\n\nexport default createStore(Reducer, applyMiddleware(thunkMiddleware))","import React from 'react'\nimport './Form.scss'\nimport { connect } from 'react-redux';\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport { addTaskToFirebase } from '../firebase';\nimport { watchTaskAddedEvent } from '../store'\n\nconst SignupForm = (props) => {\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      author: '',\n      length: '',\n      status: '',\n    },\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .min(3, 'Must be at least 3 characters long')\n        .max(15, 'Must be shorten than 15 characters')\n        .required('Required'),\n      author: Yup.string()\n        .min(3, 'Must be at least 3 characters long')\n        .max(15, 'Must be shorten than 15 characters')\n        .required('Required'),\n      length: Yup.string()\n        .matches(/^[0-9]*$/, 'Must be a number')\n        .required('Required'),\n      status: Yup.string()\n        .required('Required'),\n    }),\n    onSubmit: values => {\n      addTaskToFirebase({\n        name: values.name,\n        author: values.author,\n        length: values.length,\n        status: values.status,\n      })\n    }\n  });\n  return (\n    <form\n      className=\"aside-form\"\n      onSubmit={formik.handleSubmit}\n    >\n      <label\n        htmlFor=\"name\"\n        className={formik.errors.name ? \"label-error\" : null}\n      >Book name\n      {formik.touched.name && formik.errors.name ? (\n          <div className=\"error\">{formik.errors.name}</div>) : null}\n      </label>\n      <input\n        className={formik.errors.name ? \"input-error\" : null}\n        id=\"name\"\n        type=\"text\"\n        {...formik.getFieldProps('name')}\n      />\n      <label\n        htmlFor=\"author\"\n        className={formik.errors.author ? \"label-error\" : null}\n      >Author name\n      {formik.touched.author && formik.errors.author ? (\n          <p className=\"error\">{formik.errors.author}</p>\n        ) : null}</label>\n      <input\n        className={formik.errors.author ? \"input-error\" : null}\n        onChange={formik.handleChange}\n        id=\"author\"\n        type=\"text\"\n        {...formik.getFieldProps('author')}\n      />\n      <label\n        className={formik.errors.length ? \"label-error\" : null}\n        htmlFor=\"length\">\n        Book length\n      {formik.touched.length && formik.errors.length ? (\n          <p className=\"error\">{formik.errors.length}</p>) : null}\n      </label>\n      <input\n        className={formik.errors.length ? \"input-error\" : null}\n        id=\"length\"\n        type=\"text\"\n        {...formik.getFieldProps('length')}\n      />\n      <div className=\"radio-btn-container\">\n        <label className={formik.errors.status ? \"label-error\" : null}>\n          Did u read the book?\n        {formik.touched.status && formik.errors.status ? (\n            <div className=\"error\" >{formik.errors.status}</div>) : null}\n        </label>\n        <div className=\"RadioButton\">\n          <input\n            id=\"1\"\n            name=\"status\"\n            onChange={formik.handleChange}\n            value=\"Yes\"\n            type=\"radio\"\n            defaultChecked={formik.values.gender === \"Yes\"}\n          />\n          <label\n            htmlFor=\"1\">Yes</label>\n        </div>\n        <div className=\"RadioButton\">\n          <input\n            id=\"2\"\n            name=\"status\"\n            onChange={formik.handleChange}\n            value=\"No\"\n            type=\"radio\"\n            defaultChecked={formik.values.gender === \"No\"}\n          />\n          <label htmlFor=\"2\">No</label>\n        </div>\n      </div>\n      <button\n        className=\"submit-book-button\"\n        type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\nconst mapDispatch = dispatch => {\n  watchTaskAddedEvent(dispatch)\n  return {\n  }\n}\n\nexport default connect(null, mapDispatch)(SignupForm)","import React from 'react';\nimport SignupForm from '../Form/Form';\nimport './Aside.scss';\n\nfunction Aside(props) {\n  return (\n    <aside className=\"Aside\">\n      <h1 className=\"Aside-title\">MyBooks</h1>\n      <SignupForm />\n    </aside>\n  );\n};\n\nexport default Aside;","import React from 'react';\nimport './Book.scss';\nimport { changeStatusFromFirebase, removeTaskFromFirebase } from '../firebase'\nimport { watchTaskRemovedEvent, watchTaskChangeEvent } from '../store'\nimport { connect } from 'react-redux';\n\nconst mapDispatch = dispatch => {\n  watchTaskRemovedEvent(dispatch)\n  watchTaskChangeEvent(dispatch)\n  return {\n  }\n}\n\nconst Book = (props) => {\n  return (\n    <div className=\"Book\">\n      <h2 className=\"Book-title\">{props.name}</h2>\n      <p className=\"Book-author\">Author: {props.author}</p>\n      <p className=\"Book-lenght\">Pages: {props.length}</p>\n      <p className=\"Book-status\">Readed: {props.status}</p>\n      <div className=\"Book-btn-container\">\n        <button\n          className=\"Book-btn change\"\n          onClick={() => changeStatusFromFirebase(props.id, props.status)}>\n          Change Status\n        </button>\n        <button\n          className=\"Book-btn\"\n          onClick={() => removeTaskFromFirebase(props.id)}>\n          Delete book\n        </button>\n      </div>\n    </div >\n  )\n}\n\n\nexport default connect(null, mapDispatch)(Book);","import React from 'react';\nimport './Main.scss'\nimport Book from '../Book/Book'\nimport { connect } from 'react-redux';\nimport { getTasksThunk } from '../store'\n\nconst mapState = state => ({\n  tasks: state\n})\nconst mapDispatch = dispatch => {\n  dispatch(getTasksThunk())\n  return {\n  }\n}\nclass Main extends React.Component {\n  render() {\n    return (\n      <main className=\"Main\">\n        {this.props.tasks.map((item) => {\n          return <Book\n            key={item.id}\n            id={item.id}\n            name={item.task}\n            author={item.author}\n            length={item.length}\n            status={item.status}\n          />\n        })}\n      </main>\n    )\n  }\n}\n\nexport default connect(mapState, mapDispatch)(Main);","import React from 'react';\nimport './App.scss';\nimport Aside from '../Aside/Aside';\nimport Main from '../Main/Main';\n\nconst App = () => {\n  return (\n    <div className=\"App\" >\n      <Aside />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}